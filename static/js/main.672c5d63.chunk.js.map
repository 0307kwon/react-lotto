{"version":3,"sources":["models/Lottery.js","utils/constants.js","utils/util.js","services/LotteryMachine.js","services/ProfitCalculator.js","components/LotteriesDetail.jsx","components/PaymentForm.jsx","components/WinningNumbersForm.jsx","utils/validate.js","components/Modal.jsx","components/WinningResult.jsx","components/App.jsx","index.js"],"names":["Lottery","id","numbers","this","LOTTERY","PRIZE","RANK","WINNING_COUNT","MONEY","MESSAGE","INVALID_PAYMENT","HAS_DUPLICATED_NUMBER","SELECTOR","PAYMENT_INPUT","PAYMENT_SUBMIT","getId","getRandomNumber","min","max","Math","round","random","idMaker","formatMoney","number","Intl","NumberFormat","format","LotteryMachine","money","Array","fill","map","next","value","size","numberSet","Set","add","getRandomNumbers","ProfitCalculator","winningNumbers","bonusNumber","lotteries","rankCount","forEach","lottery","rank","_getRank","isBonusMatched","includes","reduce","winningCount","spentMoney","length","earningRate","_calculateEarning","Number","isInteger","toFixed","prizeMoney","Object","entries","earning","count","LotteriesDetail","handleNumberDisplay","setState","isNumberVisible","state","props","className","type","onChange","join","Component","PaymentForm","componentDidUpdate","prevProps","isDisabled","handleInputCheck","target","errorInputMessage","isValidPayment","handleSubmit","event","preventDefault","onMoneySubmit","onSubmit","htmlFor","placeholder","paymentMinUnit","disabled","WinningNumbersForm","inputNumbers","isSubmit","onWinningNumberSubmit","handleWinningNumberChange","targetIndex","dataset","index","handleBonusNumberChange","_","data-index","required","Modal","isModalOpen","onClick","closeModal","viewBox","d","children","WinningResult","winningResult","data-rank","resetApp","App","profitCalculator","getRankCount","getEarningRate","isResultModalOpen","closeResultModal","lotteryMachine","publishLotteries","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.672c5d63.chunk.js","sourcesContent":["export default class Lottery {\r\n  constructor(id, numbers) {\r\n    this.id = id;\r\n    this.numbers = numbers;\r\n  }\r\n}\r\n","export const MAX_PAYMENT = 100000;\r\n\r\nexport const LOTTERY = {\r\n  PRICE: 1000,\r\n  NUMBER_COUNT: 6,\r\n  MIN_NUMBER: 1,\r\n  MAX_NUMBER: 45,\r\n};\r\n\r\nexport const RANK = {\r\n  FIRST: 1,\r\n  SECOND: 2,\r\n  THIRD: 3,\r\n  FOURTH: 4,\r\n  FIFTH: 5,\r\n};\r\n\r\nexport const PRIZE = {\r\n  FIRST: {\r\n    RANK: 1,\r\n    WINNING_COUNT: 6,\r\n    MONEY: 2000000000,\r\n  },\r\n  SECOND: {\r\n    RANK: 2,\r\n    WINNING_COUNT: 5,\r\n    MONEY: 30000000,\r\n  },\r\n  THIRD: {\r\n    RANK: 3,\r\n    WINNING_COUNT: 5,\r\n    MONEY: 1500000,\r\n  },\r\n  FOURTH: {\r\n    RANK: 4,\r\n    WINNING_COUNT: 4,\r\n    MONEY: 50000,\r\n  },\r\n  FIFTH: {\r\n    RANK: 5,\r\n    WINNING_COUNT: 3,\r\n    MONEY: 5000,\r\n  },\r\n};\r\n\r\nexport const MESSAGE = {\r\n  PAYMENT_FORM: {\r\n    INVALID_PAYMENT: '올바른 금액을 입력해 주세요.',\r\n  },\r\n  WINNING_NUMBERS_FORM: {\r\n    HAS_DUPLICATED_NUMBER: '중복인 숫자가 포함되어 있습니다.',\r\n  },\r\n};\r\n\r\nexport const SELECTOR = {\r\n  ID: {\r\n    PAYMENT_INPUT: 'payment-input',\r\n    PAYMENT_SUBMIT: 'payment-submit',\r\n  },\r\n};\r\n","const getRandomNumber = (min, max) => {\r\n  return Math.round((1 - Math.random()) * (max - min)) + min;\r\n};\r\n\r\nexport const getRandomNumbers = ({ min, max, size }) => {\r\n  const numberSet = new Set();\r\n\r\n  while (numberSet.size < size) {\r\n    numberSet.add(getRandomNumber(min, max));\r\n  }\r\n\r\n  return [...numberSet];\r\n};\r\n\r\nfunction* getId() {\r\n  let id = 0;\r\n\r\n  while (true) {\r\n    yield id++;\r\n  }\r\n}\r\n\r\nexport const idMaker = getId();\r\n\r\nexport const formatMoney = number => {\r\n  return new Intl.NumberFormat('ko-KR').format(number);\r\n};\r\n","import { Lottery } from '../models';\r\nimport { getRandomNumbers, idMaker, LOTTERY } from '../utils';\r\n\r\nexport default class LotteryMachine {\r\n  publishLotteries(money) {\r\n    const lotteryAmount = money / LOTTERY.PRICE;\r\n    const lotteries = Array(lotteryAmount)\r\n      .fill(0)\r\n      .map(() => {\r\n        const id = idMaker.next().value;\r\n        const numbers = getRandomNumbers({\r\n          min: LOTTERY.MIN_NUMBER,\r\n          max: LOTTERY.MAX_NUMBER,\r\n          size: LOTTERY.NUMBER_COUNT,\r\n        });\r\n\r\n        return new Lottery(id, numbers);\r\n      });\r\n\r\n    return lotteries;\r\n  }\r\n}\r\n","import { LOTTERY, PRIZE } from '../utils';\r\n\r\nexport default class ProfitCalculator {\r\n  getRankCount({ winningNumbers, bonusNumber, lotteries }) {\r\n    const rankCount = {\r\n      [PRIZE.FIRST.RANK]: 0,\r\n      [PRIZE.SECOND.RANK]: 0,\r\n      [PRIZE.THIRD.RANK]: 0,\r\n      [PRIZE.FOURTH.RANK]: 0,\r\n      [PRIZE.FIFTH.RANK]: 0,\r\n    };\r\n\r\n    lotteries.forEach(lottery => {\r\n      const rank = this._getRank({ winningNumbers, bonusNumber, lottery });\r\n\r\n      if (rank) {\r\n        rankCount[rank]++;\r\n      }\r\n    });\r\n\r\n    return rankCount;\r\n  }\r\n\r\n  _getRank({ winningNumbers, bonusNumber, lottery }) {\r\n    const rank = {\r\n      [PRIZE.FIRST.WINNING_COUNT]: () => PRIZE.FIRST.RANK,\r\n      [PRIZE.SECOND.WINNING_COUNT]: isBonusMatched =>\r\n        isBonusMatched ? PRIZE.SECOND.RANK : PRIZE.THIRD.RANK,\r\n      [PRIZE.FOURTH.WINNING_COUNT]: () => PRIZE.FOURTH.RANK,\r\n      [PRIZE.FIFTH.WINNING_COUNT]: () => PRIZE.FIFTH.RANK,\r\n    };\r\n    const isBonusMatched = lottery.numbers.includes(bonusNumber);\r\n    const matchWinningCount = lottery.numbers.reduce((winningCount, number) => {\r\n      if (!winningNumbers.includes(number)) {\r\n        return winningCount;\r\n      }\r\n\r\n      return ++winningCount;\r\n    }, 0);\r\n\r\n    return rank[matchWinningCount]?.(isBonusMatched);\r\n  }\r\n\r\n  getEarningRate(rankCount, lotteries) {\r\n    const spentMoney = lotteries.length * LOTTERY.PRICE;\r\n    const earningRate =\r\n      (this._calculateEarning(rankCount, spentMoney) / spentMoney) * 100;\r\n\r\n    return Number.isInteger(earningRate) ? earningRate : earningRate.toFixed(2);\r\n  }\r\n\r\n  _calculateEarning(rankCount, spentMoney) {\r\n    const prizeMoney = {\r\n      [PRIZE.FIRST.RANK]: PRIZE.FIRST.MONEY,\r\n      [PRIZE.SECOND.RANK]: PRIZE.SECOND.MONEY,\r\n      [PRIZE.THIRD.RANK]: PRIZE.THIRD.MONEY,\r\n      [PRIZE.FOURTH.RANK]: PRIZE.FOURTH.MONEY,\r\n      [PRIZE.FIFTH.RANK]: PRIZE.FIFTH.MONEY,\r\n    };\r\n\r\n    return Object.entries(rankCount).reduce((earning, [rank, count]) => {\r\n      return earning + prizeMoney[rank] * count;\r\n    }, -spentMoney);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass LotteriesDetail extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isNumberVisible: false,\r\n    };\r\n  }\r\n\r\n  handleNumberDisplay = () => {\r\n    this.setState({ isNumberVisible: !this.state.isNumberVisible });\r\n  };\r\n\r\n  render() {\r\n    const { isNumberVisible } = this.state;\r\n    const { lotteries } = this.props;\r\n\r\n    return (\r\n      <section className=\"mt-9\">\r\n        <div className=\"d-flex\">\r\n          <label className=\"flex-auto my-0\">\r\n            총 {lotteries.length}개를 구매하였습니다.\r\n          </label>\r\n          <div className=\"flex-auto d-flex justify-end pr-1\">\r\n            <label className=\"switch\">\r\n              <input type=\"checkbox\" onChange={this.handleNumberDisplay} />\r\n              <span className=\"text-base font-normal\">번호보기</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <ul className={`d-flex pl-0 ${isNumberVisible ? 'flex-col' : ''}`}>\r\n          {lotteries.map(lottery => (\r\n            <li className=\"d-flex items-center\" key={lottery.id}>\r\n              <span className=\"mx-1 text-4xl\">🎟️</span>\r\n              <span className={`ml-3 ${isNumberVisible ? '' : 'd-none'}`}>\r\n                {lottery.numbers.join(', ')}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LotteriesDetail;\r\n","import React, { Component } from \"react\";\r\nimport { MAX_PAYMENT, MESSAGE, SELECTOR } from \"../utils\";\r\n\r\nclass PaymentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      money: \"\",\r\n      errorInputMessage: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    if (this.props.isDisabled === prevProps.isDisabled) {\r\n      return;\r\n    }\r\n\r\n    if (!this.props.isDisabled) {\r\n      this.setState(() => ({\r\n        money: \"\",\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleInputCheck = ({ target }) => {\r\n    const money = target.value;\r\n\r\n    if (money === \"\") {\r\n      this.setState({\r\n        money: \"\",\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      money,\r\n    });\r\n\r\n    const errorInputMessage = this.props.isValidPayment(money)\r\n      ? \"\"\r\n      : MESSAGE.PAYMENT_FORM.INVALID_PAYMENT;\r\n\r\n    this.setState({\r\n      errorInputMessage,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!this.props.isValidPayment(this.state.money)) {\r\n      this.setState({\r\n        errorInputMessage: MESSAGE.PAYMENT_FORM.INVALID_PAYMENT,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.props.onMoneySubmit(this.state.money);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"mt-5\" onSubmit={this.handleSubmit}>\r\n        <label\r\n          className=\"mb-2 d-inline-block\"\r\n          htmlFor={SELECTOR.ID.PAYMENT_INPUT}\r\n        >\r\n          구입할 금액을 입력해주세요.\r\n        </label>\r\n        <div className=\"d-flex\">\r\n          <input\r\n            id={SELECTOR.ID.PAYMENT_INPUT}\r\n            className=\"w-100 mr-2 pl-2\"\r\n            type=\"number\"\r\n            placeholder={`구입 금액 (${this.props.paymentMinUnit}원 단위)`}\r\n            onChange={this.handleInputCheck}\r\n            max={MAX_PAYMENT}\r\n            value={this.state.money}\r\n            disabled={this.props.isDisabled}\r\n          />\r\n          <button\r\n            id={SELECTOR.ID.PAYMENT_SUBMIT}\r\n            className=\"btn btn-cyan\"\r\n            type=\"submit\"\r\n            disabled={this.props.isDisabled}\r\n          >\r\n            확인\r\n          </button>\r\n        </div>\r\n        <p>{this.state.errorInputMessage}</p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaymentForm;\r\n","import React, { Component } from \"react\";\r\nimport { hasDuplicatedNumber, LOTTERY, MESSAGE } from \"../utils\";\r\n\r\nclass WinningNumbersForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSubmit: false,\r\n      winningNumbers: Array(LOTTERY.NUMBER_COUNT).fill(null),\r\n      bonusNumber: null,\r\n      errorInputMessage: \"\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const inputNumbers = [...this.state.winningNumbers, this.state.bonusNumber];\r\n\r\n    if (hasDuplicatedNumber(inputNumbers)) {\r\n      this.setState({\r\n        errorInputMessage: MESSAGE.WINNING_NUMBERS_FORM.HAS_DUPLICATED_NUMBER,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      errorInputMessage: \"\",\r\n    });\r\n    this.setState({ isSubmit: true });\r\n    this.props.onWinningNumberSubmit(\r\n      this.state.winningNumbers,\r\n      this.state.bonusNumber\r\n    );\r\n  };\r\n\r\n  handleWinningNumberChange = ({ target }) => {\r\n    const targetIndex = Number(target.dataset.index);\r\n    const winningNumbers = this.state.winningNumbers.map((number, index) => {\r\n      if (index !== targetIndex) {\r\n        return number;\r\n      }\r\n\r\n      return Number(target.value);\r\n    });\r\n\r\n    this.setState({ winningNumbers });\r\n  };\r\n\r\n  handleBonusNumberChange = ({ target }) => {\r\n    const bonusNumber = target.value;\r\n\r\n    this.setState({ bonusNumber });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"mt-9\">\r\n        <label className=\"flex-auto d-inline-block mb-3\">\r\n          지난 주 당첨번호 6개와 보너스 넘버 1개를 입력해주세요.\r\n        </label>\r\n        <div className=\"d-flex\">\r\n          <div>\r\n            <h4 className=\"mt-0 mb-3 text-center\">당첨 번호</h4>\r\n            <div>\r\n              {this.state.winningNumbers.map((_, index) => (\r\n                <input\r\n                  key={index}\r\n                  onChange={this.handleWinningNumberChange}\r\n                  data-index={index}\r\n                  className=\"winning-number mx-1 text-center\"\r\n                  type=\"number\"\r\n                  min={LOTTERY.MIN_NUMBER}\r\n                  max={LOTTERY.MAX_NUMBER}\r\n                  required\r\n                  disabled={this.state.isSubmit}\r\n                ></input>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"bonus-number-container flex-grow\">\r\n            <h4 className=\"mt-0 mb-3 text-center\">보너스 번호</h4>\r\n            <div className=\"d-flex justify-center\">\r\n              <input\r\n                className=\"bonus-number text-center\"\r\n                onChange={this.handleBonusNumberChange}\r\n                type=\"number\"\r\n                min={LOTTERY.MIN_NUMBER}\r\n                max={LOTTERY.MAX_NUMBER}\r\n                disabled={this.state.isSubmit}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p className=\"mt-3\">{this.state.errorInputMessage}</p>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"open-result-modal-button mt-5 btn btn-cyan w-100\"\r\n        >\r\n          결과 확인하기\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WinningNumbersForm;\r\n","export const hasDuplicatedNumber = numbers => {\r\n  const set = new Set(numbers);\r\n\r\n  return set.size !== numbers.length;\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Modal extends Component {\r\n  render() {\r\n    return (\r\n      <div className={`modal ${this.props.isModalOpen ? \"open\" : \"\"}`}>\r\n        <div className=\"modal-inner p-10\">\r\n          <div className=\"modal-close\" onClick={this.props.closeModal}>\r\n            <svg viewBox=\"0 0 40 40\">\r\n              <path className=\"close-x\" d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\r\n            </svg>\r\n          </div>\r\n\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\nimport { formatMoney, PRIZE } from \"../utils\";\n\nfunction WinningResult(props) {\n  const { rankCount, earningRate } = props.winningResult;\n\n  return (\n    <>\n      <h2 className=\"text-center\">🏆 당첨 통계 🏆</h2>\n      <div className=\"d-flex justify-center\">\n        <table className=\"result-table border-collapse border border-black\">\n          <thead>\n            <tr className=\"text-center\">\n              <th className=\"p-3\">일치 갯수</th>\n              <th className=\"p-3\">당첨금</th>\n              <th className=\"p-3\">당첨 갯수</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"text-center\">\n              <td className=\"p-3\">{PRIZE.FIFTH.WINNING_COUNT}개</td>\n              <td className=\"p-3\">{formatMoney(PRIZE.FIFTH.MONEY)}</td>\n              <td className=\"modal__winning-count p-3\" data-rank=\"fifth\">\n                {rankCount[PRIZE.FIFTH.RANK]}개\n              </td>\n            </tr>\n            <tr className=\"text-center\">\n              <td className=\"p-3\">{PRIZE.FOURTH.WINNING_COUNT}개</td>\n              <td className=\"p-3\">{formatMoney(PRIZE.FOURTH.MONEY)}</td>\n              <td className=\"modal__winning-count p-3\" data-rank=\"fourth\">\n                {rankCount[PRIZE.FOURTH.RANK]}개\n              </td>\n            </tr>\n            <tr className=\"text-center\">\n              <td className=\"p-3\">{PRIZE.THIRD.WINNING_COUNT}개</td>\n              <td className=\"p-3\">{formatMoney(PRIZE.THIRD.MONEY)}</td>\n              <td className=\"modal__winning-count p-3\" data-rank=\"third\">\n                {rankCount[PRIZE.THIRD.RANK]}개\n              </td>\n            </tr>\n            <tr className=\"text-center\">\n              <td className=\"p-3\">{PRIZE.SECOND.WINNING_COUNT}개 + 보너스볼</td>\n              <td className=\"p-3\">{formatMoney(PRIZE.SECOND.MONEY)}</td>\n              <td className=\"modal__winning-count p-3\" data-rank=\"second\">\n                {rankCount?.[PRIZE.SECOND.RANK]}개\n              </td>\n            </tr>\n            <tr className=\"text-center\">\n              <td className=\"p-3\">{PRIZE.FIRST.WINNING_COUNT}개</td>\n              <td className=\"p-3\">{formatMoney(PRIZE.FIRST.MONEY)}</td>\n              <td className=\"modal__winning-count p-3\" data-rank=\"first\">\n                {rankCount[PRIZE.FIRST.RANK]}개\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <p className=\"modal__earning-rate text-center font-bold\">\n        당신의 총 수익률은 {earningRate}%입니다.\n      </p>\n      <div className=\"d-flex justify-center mt-5\">\n        <button\n          type=\"button\"\n          className=\"modal__restart-button btn btn-cyan\"\n          onClick={props.resetApp}\n        >\n          다시 시작하기\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default WinningResult;\n","import React, { Component } from \"react\";\r\nimport { LotteryMachine, ProfitCalculator } from \"../services\";\r\nimport { LOTTERY } from \"../utils\";\r\nimport LotteriesDetail from \"./LotteriesDetail\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport WinningNumbersForm from \"./WinningNumbersForm\";\r\nimport Modal from \"./Modal\";\r\nimport WinningResult from \"./WinningResult\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.lotteryMachine = new LotteryMachine();\r\n    this.profitCalculator = new ProfitCalculator();\r\n    this.state = {\r\n      lotteries: [],\r\n      winningResult: null,\r\n      isResultModalOpen: false,\r\n    };\r\n  }\r\n\r\n  onWinningNumberSubmit = (winningNumbers, bonusNumber) => {\r\n    const rankCount = this.profitCalculator.getRankCount({\r\n      winningNumbers,\r\n      bonusNumber,\r\n      lotteries: this.state.lotteries,\r\n    });\r\n    const earningRate = this.profitCalculator.getEarningRate(\r\n      rankCount,\r\n      this.state.lotteries\r\n    );\r\n\r\n    this.setState({\r\n      winningResult: { rankCount, earningRate },\r\n      isResultModalOpen: true,\r\n    });\r\n  };\r\n\r\n  closeResultModal = () => {\r\n    this.setState({ isResultModalOpen: false });\r\n  };\r\n\r\n  resetApp = () => {\r\n    this.setState({\r\n      lotteries: [],\r\n      winningResult: null,\r\n      isResultModalOpen: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { lotteries, winningResult, isResultModalOpen } = this.state;\r\n\r\n    return (\r\n      <div id=\"app\" className=\"d-flex justify-center mt-5\">\r\n        <div className=\"w-100\">\r\n          <h1 className=\"text-center\">🎱 행운의 로또</h1>\r\n          <PaymentForm\r\n            isDisabled={lotteries.length !== 0}\r\n            onMoneySubmit={(money) => {\r\n              const lotteries = this.lotteryMachine.publishLotteries(money);\r\n\r\n              this.setState({ lotteries });\r\n            }}\r\n            isValidPayment={(value) => value > 0 && value % LOTTERY.PRICE === 0}\r\n            paymentMinUnit={LOTTERY.PRICE}\r\n          />\r\n          {lotteries.length > 0 && (\r\n            <>\r\n              <LotteriesDetail lotteries={lotteries} />\r\n              <WinningNumbersForm\r\n                onWinningNumberSubmit={this.onWinningNumberSubmit}\r\n              />\r\n            </>\r\n          )}\r\n          <Modal\r\n            isModalOpen={isResultModalOpen}\r\n            closeModal={this.closeResultModal}\r\n          >\r\n            {isResultModalOpen && (\r\n              <WinningResult\r\n                winningResult={winningResult}\r\n                resetApp={this.resetApp}\r\n              />\r\n            )}\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './css/index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}