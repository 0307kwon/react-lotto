{"version":3,"sources":["models/Lottery.js","utils/constants.js","utils/util.js","utils/validate.js","services/LotteryMachine.js","services/ProfitCalculator.js","components/LotteriesDetail.jsx","components/PaymentForm.jsx","components/WinningNumbersForm.jsx","components/Modal.jsx","components/WinningResult.jsx","components/CountDown.jsx","pages/index.jsx","index.js"],"names":["Lottery","id","numbers","this","LOTTERY","PRIZE","RANK","WINNING_COUNT","MONEY","MESSAGE","PAYMENT_FORM","INVALID_PAYMENT","WINNING_NUMBERS_FORM","HAS_DUPLICATED_NUMBER","OUT_OF_RANGE","SELECTOR","PAYMENT_INPUT","PAYMENT_SUBMIT","getId","getRandomNumber","min","max","Math","round","random","idMaker","formatMoney","number","Intl","NumberFormat","format","isNumber","string","test","LotteryMachine","money","Array","fill","map","next","value","size","numberSet","Set","add","getRandomNumbers","ProfitCalculator","winningNumbers","bonusNumber","lotteries","rankCount","forEach","lottery","rank","_getRank","isBonusMatched","includes","reduce","winningCount","spentMoney","length","earningRate","_calculateEarning","Number","isInteger","toFixed","prizeMoney","Object","entries","earning","count","LotteriesDetail","useState","isNumberVisible","setIsNumberVisible","className","type","onChange","prevState","join","PaymentForm","isDisabled","isValidPayment","onMoneySubmit","paymentMinUnit","setMoney","errorInputMessage","setErrorInputMessage","useEffect","onSubmit","event","preventDefault","htmlFor","placeholder","target","newErrorMessage","disabled","WinningNumbersForm","onWinningNumberSubmit","isSubmit","setIsSubmit","winningNumberInputs","setWinningNumberInputs","bonusNumberInput","setBonusNumberInput","handleWinningNumberChange","targetIndex","dataset","index","newWinningNumberInputs","input","values","inputs","every","data-index","required","Modal","isModalOpen","closeModal","children","onClick","currentTarget","closest","viewBox","d","WinningResult","winningResult","resetApp","data-rank","CountDown","initialTimeBySecond","onCountDownEnded","intervalId","setIntervalId","timeToLeft","setTimeToLeft","newId","setInterval","prev","clearInterval","App","lotteryMachine","profitCalculator","setLotteries","setWinningNumbers","setBonusNumber","setWinningResult","isResultModalOpen","setIsResultModalOpen","isCountDownVisible","setIsCountDownVisible","publishLotteries","getRankCount","getEarningRate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0719823.chunk.js","sourcesContent":["export default class Lottery {\r\n  constructor(id, numbers) {\r\n    this.id = id;\r\n    this.numbers = numbers;\r\n  }\r\n}\r\n","export const MAX_PAYMENT = 100000;\r\n\r\nexport const LOTTO_RESULT_COUNT_DOWN = 5;\r\n\r\nexport const LOTTERY = {\r\n  PRICE: 1000,\r\n  NUMBER_COUNT: 6,\r\n  MIN_NUMBER: 1,\r\n  MAX_NUMBER: 45,\r\n  NUMBER_INPUT_MAX_LENGTH: 2,\r\n};\r\n\r\nexport const RANK = {\r\n  FIRST: 1,\r\n  SECOND: 2,\r\n  THIRD: 3,\r\n  FOURTH: 4,\r\n  FIFTH: 5,\r\n};\r\n\r\nexport const PRIZE = {\r\n  FIRST: {\r\n    RANK: 1,\r\n    WINNING_COUNT: 6,\r\n    MONEY: 2000000000,\r\n  },\r\n  SECOND: {\r\n    RANK: 2,\r\n    WINNING_COUNT: 5,\r\n    MONEY: 30000000,\r\n  },\r\n  THIRD: {\r\n    RANK: 3,\r\n    WINNING_COUNT: 5,\r\n    MONEY: 1500000,\r\n  },\r\n  FOURTH: {\r\n    RANK: 4,\r\n    WINNING_COUNT: 4,\r\n    MONEY: 50000,\r\n  },\r\n  FIFTH: {\r\n    RANK: 5,\r\n    WINNING_COUNT: 3,\r\n    MONEY: 5000,\r\n  },\r\n};\r\n\r\nexport const MESSAGE = {\r\n  PAYMENT_FORM: {\r\n    INVALID_PAYMENT: \"올바른 금액을 입력해 주세요.\",\r\n  },\r\n  WINNING_NUMBERS_FORM: {\r\n    HAS_DUPLICATED_NUMBER: \"중복인 숫자가 포함되어 있습니다.\",\r\n    OUT_OF_RANGE: `숫자는 ${LOTTERY.MIN_NUMBER}이상 ${LOTTERY.MAX_NUMBER}이하여야 합니다.`,\r\n  },\r\n};\r\n\r\nexport const SELECTOR = {\r\n  ID: {\r\n    PAYMENT_INPUT: \"payment-input\",\r\n    PAYMENT_SUBMIT: \"payment-submit\",\r\n  },\r\n};\r\n","const getRandomNumber = (min, max) => {\r\n  return Math.round((1 - Math.random()) * (max - min)) + min;\r\n};\r\n\r\nexport const getRandomNumbers = ({ min, max, size }) => {\r\n  const numberSet = new Set();\r\n\r\n  while (numberSet.size < size) {\r\n    numberSet.add(getRandomNumber(min, max));\r\n  }\r\n\r\n  return [...numberSet];\r\n};\r\n\r\nfunction* getId() {\r\n  let id = 0;\r\n\r\n  while (true) {\r\n    yield id++;\r\n  }\r\n}\r\n\r\nexport const idMaker = getId();\r\n\r\nexport const formatMoney = number => {\r\n  return new Intl.NumberFormat('ko-KR').format(number);\r\n};\r\n","export const hasDuplicatedValue = (values) => {\r\n  const set = new Set(values);\r\n\r\n  return set.size !== values.length;\r\n};\r\n\r\nexport const isNumber = (string) => {\r\n  return !/[^0-9]/g.test(string);\r\n};\r\n","import { Lottery } from '../models';\r\nimport { getRandomNumbers, idMaker, LOTTERY } from '../utils';\r\n\r\nexport default class LotteryMachine {\r\n  publishLotteries(money) {\r\n    const lotteryAmount = money / LOTTERY.PRICE;\r\n    const lotteries = Array(lotteryAmount)\r\n      .fill(0)\r\n      .map(() => {\r\n        const id = idMaker.next().value;\r\n        const numbers = getRandomNumbers({\r\n          min: LOTTERY.MIN_NUMBER,\r\n          max: LOTTERY.MAX_NUMBER,\r\n          size: LOTTERY.NUMBER_COUNT,\r\n        });\r\n\r\n        return new Lottery(id, numbers);\r\n      });\r\n\r\n    return lotteries;\r\n  }\r\n}\r\n","import { LOTTERY, PRIZE } from '../utils';\r\n\r\nexport default class ProfitCalculator {\r\n  getRankCount({ winningNumbers, bonusNumber, lotteries }) {\r\n    const rankCount = {\r\n      [PRIZE.FIRST.RANK]: 0,\r\n      [PRIZE.SECOND.RANK]: 0,\r\n      [PRIZE.THIRD.RANK]: 0,\r\n      [PRIZE.FOURTH.RANK]: 0,\r\n      [PRIZE.FIFTH.RANK]: 0,\r\n    };\r\n\r\n    lotteries.forEach(lottery => {\r\n      const rank = this._getRank({ winningNumbers, bonusNumber, lottery });\r\n\r\n      if (rank) {\r\n        rankCount[rank]++;\r\n      }\r\n    });\r\n\r\n    return rankCount;\r\n  }\r\n\r\n  _getRank({ winningNumbers, bonusNumber, lottery }) {\r\n    const rank = {\r\n      [PRIZE.FIRST.WINNING_COUNT]: () => PRIZE.FIRST.RANK,\r\n      [PRIZE.SECOND.WINNING_COUNT]: isBonusMatched =>\r\n        isBonusMatched ? PRIZE.SECOND.RANK : PRIZE.THIRD.RANK,\r\n      [PRIZE.FOURTH.WINNING_COUNT]: () => PRIZE.FOURTH.RANK,\r\n      [PRIZE.FIFTH.WINNING_COUNT]: () => PRIZE.FIFTH.RANK,\r\n    };\r\n    const isBonusMatched = lottery.numbers.includes(bonusNumber);\r\n    const matchWinningCount = lottery.numbers.reduce((winningCount, number) => {\r\n      if (!winningNumbers.includes(number)) {\r\n        return winningCount;\r\n      }\r\n\r\n      return ++winningCount;\r\n    }, 0);\r\n\r\n    return rank[matchWinningCount]?.(isBonusMatched);\r\n  }\r\n\r\n  getEarningRate(rankCount, lotteries) {\r\n    const spentMoney = lotteries.length * LOTTERY.PRICE;\r\n    const earningRate =\r\n      (this._calculateEarning(rankCount, spentMoney) / spentMoney) * 100;\r\n\r\n    return Number.isInteger(earningRate) ? earningRate : earningRate.toFixed(2);\r\n  }\r\n\r\n  _calculateEarning(rankCount, spentMoney) {\r\n    const prizeMoney = {\r\n      [PRIZE.FIRST.RANK]: PRIZE.FIRST.MONEY,\r\n      [PRIZE.SECOND.RANK]: PRIZE.SECOND.MONEY,\r\n      [PRIZE.THIRD.RANK]: PRIZE.THIRD.MONEY,\r\n      [PRIZE.FOURTH.RANK]: PRIZE.FOURTH.MONEY,\r\n      [PRIZE.FIFTH.RANK]: PRIZE.FIFTH.MONEY,\r\n    };\r\n\r\n    return Object.entries(rankCount).reduce((earning, [rank, count]) => {\r\n      return earning + prizeMoney[rank] * count;\r\n    }, -spentMoney);\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nconst LotteriesDetail = ({ lotteries }) => {\r\n  const [isNumberVisible, setIsNumberVisible] = useState(false);\r\n\r\n  const handleNumberDisplay = () => {\r\n    setIsNumberVisible((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <section className=\"mt-9\">\r\n      <div className=\"d-flex\">\r\n        <label className=\"flex-auto my-0\">\r\n          총 {lotteries.length}개를 구매하였습니다.\r\n        </label>\r\n        <div className=\"flex-auto d-flex justify-end pr-1\">\r\n          <label className=\"switch\">\r\n            <input type=\"checkbox\" onChange={handleNumberDisplay} />\r\n            <span className=\"text-base font-normal\">번호보기</span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <ul className={`d-flex pl-0 ${isNumberVisible ? \"flex-col\" : \"\"}`}>\r\n        {lotteries.map((lottery) => (\r\n          <li className=\"d-flex items-center\" key={lottery.id}>\r\n            <span className=\"mx-1 text-4xl\">🎟️</span>\r\n            <span className={`ml-3 ${isNumberVisible ? \"\" : \"d-none\"}`}>\r\n              {lottery.numbers.join(\", \")}\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LotteriesDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { isNumber, MAX_PAYMENT, MESSAGE, SELECTOR } from \"../utils\";\r\n\r\nconst PaymentForm = ({\r\n  isDisabled,\r\n  isValidPayment,\r\n  onMoneySubmit,\r\n  paymentMinUnit,\r\n}) => {\r\n  const [money, setMoney] = useState(\"\");\r\n  const [errorInputMessage, setErrorInputMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!isDisabled) {\r\n      setMoney(\"\");\r\n    }\r\n  }, [isDisabled]);\r\n\r\n  const handleInputCheck = ({ target }) => {\r\n    if (!isNumber(target.value)) {\r\n      return;\r\n    }\r\n\r\n    const money = target.value;\r\n\r\n    setMoney(money);\r\n\r\n    const newErrorMessage = isValidPayment(money)\r\n      ? \"\"\r\n      : MESSAGE.PAYMENT_FORM.INVALID_PAYMENT;\r\n\r\n    setErrorInputMessage(newErrorMessage);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!isValidPayment(money)) {\r\n      setErrorInputMessage(MESSAGE.PAYMENT_FORM.INVALID_PAYMENT);\r\n\r\n      return;\r\n    }\r\n\r\n    onMoneySubmit(money);\r\n  };\r\n\r\n  return (\r\n    <form className=\"mt-5\" onSubmit={handleSubmit}>\r\n      <label\r\n        className=\"mb-2 d-inline-block\"\r\n        htmlFor={SELECTOR.ID.PAYMENT_INPUT}\r\n      >\r\n        구입할 금액을 입력해주세요.\r\n      </label>\r\n      <div className=\"d-flex\">\r\n        <input\r\n          id={SELECTOR.ID.PAYMENT_INPUT}\r\n          className=\"w-100 mr-2 pl-2\"\r\n          type=\"text\"\r\n          placeholder={`구입 금액 (${paymentMinUnit}원 단위)`}\r\n          onChange={handleInputCheck}\r\n          max={MAX_PAYMENT}\r\n          value={money}\r\n          disabled={isDisabled}\r\n        />\r\n        <button\r\n          id={SELECTOR.ID.PAYMENT_SUBMIT}\r\n          className=\"btn btn-cyan\"\r\n          type=\"submit\"\r\n          disabled={isDisabled}\r\n        >\r\n          확인\r\n        </button>\r\n      </div>\r\n      <p>{errorInputMessage}</p>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n","import React, { useState } from \"react\";\r\nimport { hasDuplicatedValue, isNumber, LOTTERY, MESSAGE } from \"../utils\";\r\n\r\nconst WinningNumbersForm = ({ onWinningNumberSubmit }) => {\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n  const [winningNumberInputs, setWinningNumberInputs] = useState(\r\n    Array(LOTTERY.NUMBER_COUNT).fill(\"\")\r\n  );\r\n  const [bonusNumberInput, setBonusNumberInput] = useState(\"\");\r\n  const [errorInputMessage, setErrorInputMessage] = useState(\"\");\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const inputs = [...winningNumberInputs, bonusNumberInput];\r\n\r\n    const isNumberInputsInRange = inputs.every(\r\n      (input) =>\r\n        LOTTERY.MIN_NUMBER <= Number(input) &&\r\n        Number(input) <= LOTTERY.MAX_NUMBER\r\n    );\r\n\r\n    if (!isNumberInputsInRange) {\r\n      setErrorInputMessage(MESSAGE.WINNING_NUMBERS_FORM.OUT_OF_RANGE);\r\n\r\n      return;\r\n    }\r\n\r\n    if (hasDuplicatedValue(inputs)) {\r\n      setErrorInputMessage(MESSAGE.WINNING_NUMBERS_FORM.HAS_DUPLICATED_NUMBER);\r\n\r\n      return;\r\n    }\r\n\r\n    setErrorInputMessage(\"\");\r\n    setIsSubmit(true);\r\n\r\n    onWinningNumberSubmit(\r\n      winningNumberInputs.map((input) => Number(input)),\r\n      Number(bonusNumberInput)\r\n    );\r\n  };\r\n\r\n  const handleWinningNumberChange = ({ target }) => {\r\n    if (!isNumber(target.value)) {\r\n      return;\r\n    }\r\n\r\n    if (target.value.length > LOTTERY.NUMBER_INPUT_MAX_LENGTH) {\r\n      return;\r\n    }\r\n\r\n    const targetIndex = Number(target.dataset.index);\r\n    const newWinningNumberInputs = winningNumberInputs.map((input, index) => {\r\n      if (index !== targetIndex) {\r\n        return input;\r\n      }\r\n\r\n      return target.value;\r\n    });\r\n\r\n    setWinningNumberInputs(newWinningNumberInputs);\r\n  };\r\n\r\n  const handleBonusNumberChange = ({ target }) => {\r\n    if (!isNumber(target.value)) {\r\n      return;\r\n    }\r\n\r\n    if (target.value.length > LOTTERY.NUMBER_INPUT_MAX_LENGTH) {\r\n      return;\r\n    }\r\n\r\n    setBonusNumberInput(target.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"mt-9\">\r\n      <label className=\"flex-auto d-inline-block mb-3\">\r\n        지난 주 당첨번호 6개와 보너스 넘버 1개를 입력해주세요.\r\n      </label>\r\n      <div className=\"d-flex\">\r\n        <div>\r\n          <h4 className=\"mt-0 mb-3 text-center\">당첨 번호</h4>\r\n          <div>\r\n            {winningNumberInputs.map((value, index) => (\r\n              <input\r\n                key={index}\r\n                onChange={handleWinningNumberChange}\r\n                data-index={index}\r\n                className=\"winning-number mx-1 text-center\"\r\n                type=\"text\"\r\n                value={value}\r\n                min={LOTTERY.MIN_NUMBER}\r\n                max={LOTTERY.MAX_NUMBER}\r\n                required\r\n                disabled={isSubmit}\r\n              ></input>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"bonus-number-container flex-grow\">\r\n          <h4 className=\"mt-0 mb-3 text-center\">보너스 번호</h4>\r\n          <div className=\"d-flex justify-center\">\r\n            <input\r\n              className=\"bonus-number text-center\"\r\n              onChange={handleBonusNumberChange}\r\n              type=\"text\"\r\n              value={bonusNumberInput}\r\n              min={LOTTERY.MIN_NUMBER}\r\n              max={LOTTERY.MAX_NUMBER}\r\n              disabled={isSubmit}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <p className=\"mt-3\">{errorInputMessage}</p>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"open-result-modal-button mt-5 btn btn-cyan w-100\"\r\n      >\r\n        결과 확인하기\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default WinningNumbersForm;\r\n","import React from \"react\";\r\n\r\nconst Modal = ({ isModalOpen, closeModal, children }) => {\r\n  const onCloseButtonClick = ({ target, currentTarget }) => {\r\n    if (target === currentTarget) {\r\n      closeModal();\r\n      return;\r\n    }\r\n\r\n    if (target.closest(\".modal-close\")) {\r\n      closeModal();\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`modal ${isModalOpen ? \"open\" : \"\"}`}\r\n      onClick={onCloseButtonClick}\r\n    >\r\n      <div className=\"modal-inner p-10\">\r\n        <div className=\"modal-close\">\r\n          <svg viewBox=\"0 0 40 40\">\r\n            <path className=\"close-x\" d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\r\n          </svg>\r\n        </div>\r\n\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { formatMoney, PRIZE } from \"../utils\";\r\n\r\nconst WinningResult = ({ winningResult, resetApp }) => {\r\n  const { rankCount, earningRate } = winningResult;\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"text-center\">🏆 당첨 통계 🏆</h2>\r\n      <div className=\"d-flex justify-center\">\r\n        <table className=\"result-table border-collapse border border-black\">\r\n          <thead>\r\n            <tr className=\"text-center\">\r\n              <th className=\"p-3\">일치 갯수</th>\r\n              <th className=\"p-3\">당첨금</th>\r\n              <th className=\"p-3\">당첨 갯수</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className=\"text-center\">\r\n              <td className=\"p-3\">{PRIZE.FIFTH.WINNING_COUNT}개</td>\r\n              <td className=\"p-3\">{formatMoney(PRIZE.FIFTH.MONEY)}</td>\r\n              <td className=\"modal__winning-count p-3\" data-rank=\"fifth\">\r\n                {rankCount[PRIZE.FIFTH.RANK]}개\r\n              </td>\r\n            </tr>\r\n            <tr className=\"text-center\">\r\n              <td className=\"p-3\">{PRIZE.FOURTH.WINNING_COUNT}개</td>\r\n              <td className=\"p-3\">{formatMoney(PRIZE.FOURTH.MONEY)}</td>\r\n              <td className=\"modal__winning-count p-3\" data-rank=\"fourth\">\r\n                {rankCount[PRIZE.FOURTH.RANK]}개\r\n              </td>\r\n            </tr>\r\n            <tr className=\"text-center\">\r\n              <td className=\"p-3\">{PRIZE.THIRD.WINNING_COUNT}개</td>\r\n              <td className=\"p-3\">{formatMoney(PRIZE.THIRD.MONEY)}</td>\r\n              <td className=\"modal__winning-count p-3\" data-rank=\"third\">\r\n                {rankCount[PRIZE.THIRD.RANK]}개\r\n              </td>\r\n            </tr>\r\n            <tr className=\"text-center\">\r\n              <td className=\"p-3\">{PRIZE.SECOND.WINNING_COUNT}개 + 보너스볼</td>\r\n              <td className=\"p-3\">{formatMoney(PRIZE.SECOND.MONEY)}</td>\r\n              <td className=\"modal__winning-count p-3\" data-rank=\"second\">\r\n                {rankCount?.[PRIZE.SECOND.RANK]}개\r\n              </td>\r\n            </tr>\r\n            <tr className=\"text-center\">\r\n              <td className=\"p-3\">{PRIZE.FIRST.WINNING_COUNT}개</td>\r\n              <td className=\"p-3\">{formatMoney(PRIZE.FIRST.MONEY)}</td>\r\n              <td className=\"modal__winning-count p-3\" data-rank=\"first\">\r\n                {rankCount[PRIZE.FIRST.RANK]}개\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <p className=\"modal__earning-rate text-center font-bold\">\r\n        당신의 총 수익률은 {earningRate}%입니다.\r\n      </p>\r\n      <div className=\"d-flex justify-center mt-5\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"modal__restart-button btn btn-cyan\"\r\n          onClick={resetApp}\r\n        >\r\n          다시 시작하기\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WinningResult;\r\n","import { useEffect, useState } from \"react\";\n\nconst CountDown = ({ initialTimeBySecond, onCountDownEnded, children }) => {\n  const [intervalId, setIntervalId] = useState(null);\n  const [timeToLeft, setTimeToLeft] = useState(initialTimeBySecond);\n\n  useEffect(() => {\n    const newId = setInterval(() => {\n      setTimeToLeft((prev) => prev - 1);\n    }, 1000);\n\n    setIntervalId(newId);\n\n    return () => {\n      clearInterval(newId);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (timeToLeft === 0) {\n      clearInterval(intervalId);\n      onCountDownEnded();\n    }\n  }, [timeToLeft]);\n\n  return (\n    <div className=\"count-down\">\n      {children}\n      <div className=\"count-down__time-to-left\">\n        <p>남은 시간 : {timeToLeft}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default CountDown;\n","import React, { useState } from \"react\";\r\nimport { LotteryMachine, ProfitCalculator } from \"../services\";\r\nimport { LOTTERY } from \"../utils\";\r\nimport LotteriesDetail from \"../components/LotteriesDetail\";\r\nimport PaymentForm from \"../components/PaymentForm\";\r\nimport WinningNumbersForm from \"../components/WinningNumbersForm\";\r\nimport Modal from \"../components/Modal\";\r\nimport WinningResult from \"../components/WinningResult\";\r\nimport CountDown from \"../components/CountDown\";\r\nimport { LOTTO_RESULT_COUNT_DOWN } from \"../utils/constants\";\r\n\r\nconst App = () => {\r\n  const lotteryMachine = new LotteryMachine();\r\n  const profitCalculator = new ProfitCalculator();\r\n\r\n  const [lotteries, setLotteries] = useState([]);\r\n  const [winningNumbers, setWinningNumbers] = useState([]);\r\n  const [bonusNumber, setBonusNumber] = useState([]);\r\n\r\n  const [winningResult, setWinningResult] = useState(null);\r\n\r\n  const [isResultModalOpen, setIsResultModalOpen] = useState(false);\r\n  const [isCountDownVisible, setIsCountDownVisible] = useState(false);\r\n\r\n  const resetApp = () => {\r\n    setLotteries([]);\r\n    setWinningResult(null);\r\n    setIsResultModalOpen(false);\r\n    setWinningNumbers([]);\r\n    setBonusNumber(null);\r\n    setIsCountDownVisible(false);\r\n  };\r\n\r\n  const onMoneySubmit = (money) => {\r\n    const lotteries = lotteryMachine.publishLotteries(money);\r\n\r\n    setLotteries(lotteries);\r\n  };\r\n\r\n  const isValidPayment = (value) => {\r\n    if (value <= 0) {\r\n      return false;\r\n    }\r\n\r\n    if (value % LOTTERY.PRICE !== 0) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const onWinningNumberSubmit = (winningNumbers, bonusNumber) => {\r\n    if (winningResult) {\r\n      setIsResultModalOpen(true);\r\n      return;\r\n    }\r\n\r\n    setWinningNumbers(winningNumbers);\r\n    setBonusNumber(bonusNumber);\r\n    setIsCountDownVisible(true);\r\n  };\r\n\r\n  const announceResult = () => {\r\n    const rankCount = profitCalculator.getRankCount({\r\n      winningNumbers,\r\n      bonusNumber,\r\n      lotteries,\r\n    });\r\n    const earningRate = profitCalculator.getEarningRate(rankCount, lotteries);\r\n\r\n    setWinningResult({ rankCount, earningRate });\r\n    setIsResultModalOpen(true);\r\n  };\r\n\r\n  const closeResultModal = () => {\r\n    setIsResultModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div id=\"app\" className=\"d-flex justify-center mt-5\">\r\n      <div className=\"w-100\">\r\n        <h1 className=\"text-center\">🎱 행운의 로또</h1>\r\n        <PaymentForm\r\n          isDisabled={lotteries.length !== 0}\r\n          onMoneySubmit={onMoneySubmit}\r\n          isValidPayment={isValidPayment}\r\n          paymentMinUnit={LOTTERY.PRICE}\r\n        />\r\n        {lotteries.length > 0 && (\r\n          <>\r\n            <LotteriesDetail lotteries={lotteries} />\r\n            <WinningNumbersForm onWinningNumberSubmit={onWinningNumberSubmit} />\r\n          </>\r\n        )}\r\n        {isCountDownVisible && (\r\n          <CountDown\r\n            initialTimeBySecond={LOTTO_RESULT_COUNT_DOWN}\r\n            onCountDownEnded={announceResult}\r\n          >\r\n            <h2>🎉 로또 결과가 곧 발표됩니다! 🎉</h2>\r\n          </CountDown>\r\n        )}\r\n\r\n        <Modal isModalOpen={isResultModalOpen} closeModal={closeResultModal}>\r\n          {isResultModalOpen && (\r\n            <WinningResult winningResult={winningResult} resetApp={resetApp} />\r\n          )}\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./pages\";\r\nimport \"./css/index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}