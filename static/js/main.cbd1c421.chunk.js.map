{"version":3,"sources":["models/Lottery.js","utils/constants.js","utils/util.js","services/LotteryMachine.js","services/ProfitCalculator.js","components/LotteriesDetail.jsx","components/PaymentForm.jsx","components/WinningNumbersForm.jsx","utils/validate.js","components/PrizeTableInfo.jsx","components/WinningResultModal.jsx","components/App.jsx","index.js"],"names":["Lottery","id","numbers","this","LOTTERY","PRIZE","RANK","WINNING_COUNT","MONEY","MESSAGE","INVALID_PAYMENT","HAS_DUPLICATED_NUMBER","SELECTOR","PAYMENT_INPUT","PAYMENT_SUBMIT","getId","getRandomNumber","min","max","Math","round","random","idMaker","LotteryMachine","money","Array","fill","map","next","value","size","numberSet","Set","add","getRandomNumbers","ProfitCalculator","winningNumbers","bonusNumber","lotteries","rankCount","_getRankCount","earningRate","_getEarningRate","forEach","lottery","rank","_getRank","isBonusMatched","includes","reduce","winningCount","number","spentMoney","length","_calculateEarning","Number","isInteger","toFixed","prizeMoney","Object","entries","earning","count","LotteriesDetail","handleNumberDisplay","setState","isNumberVisible","state","props","className","type","onChange","join","Component","PaymentForm","handleInputCheck","target","$message","messageRef","current","setMoney","isValidPayment","innerText","handleSubmit","event","preventDefault","$input","setLotteries","React","createRef","onSubmit","htmlFor","placeholder","disabled","ref","WinningNumbersForm","inputNumbers","isSubmit","setWinningResult","handleWinningNumberChange","targetIndex","dataset","index","handleBonusNumberChange","_","data-index","required","PrizeTableInfo","Intl","NumberFormat","format","WinningResultModal","winningResult","isModalOpen","onClick","closeModal","viewBox","d","resetApp","App","lotteryMachine","publishLotteries","profitCalculator","getWinningResult","isResultModalOpen","closeResultModal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbd1c421.chunk.js","sourcesContent":["export default class Lottery {\r\n  constructor(id, numbers) {\r\n    this.id = id;\r\n    this.numbers = numbers;\r\n  }\r\n}\r\n","export const MAX_PAYMENT = 100000;\r\n\r\nexport const LOTTERY = {\r\n  PRICE: 1000,\r\n  NUMBER_COUNT: 6,\r\n  MIN_NUMBER: 1,\r\n  MAX_NUMBER: 45,\r\n};\r\n\r\nexport const RANK = {\r\n  FIRST: 1,\r\n  SECOND: 2,\r\n  THIRD: 3,\r\n  FOURTH: 4,\r\n  FIFTH: 5,\r\n};\r\n\r\nexport const PRIZE = {\r\n  FIRST: {\r\n    RANK: 1,\r\n    WINNING_COUNT: 6,\r\n    MONEY: 2000000000,\r\n  },\r\n  SECOND: {\r\n    RANK: 2,\r\n    WINNING_COUNT: 5,\r\n    MONEY: 30000000,\r\n  },\r\n  THIRD: {\r\n    RANK: 3,\r\n    WINNING_COUNT: 5,\r\n    MONEY: 1500000,\r\n  },\r\n  FOURTH: {\r\n    RANK: 4,\r\n    WINNING_COUNT: 4,\r\n    MONEY: 50000,\r\n  },\r\n  FIFTH: {\r\n    RANK: 5,\r\n    WINNING_COUNT: 3,\r\n    MONEY: 5000,\r\n  },\r\n};\r\n\r\nexport const MESSAGE = {\r\n  PAYMENT_FORM: {\r\n    INVALID_PAYMENT: '올바른 금액을 입력해 주세요.',\r\n  },\r\n  WINNING_NUMBERS_FORM: {\r\n    HAS_DUPLICATED_NUMBER: '중복인 숫자가 포함되어 있습니다.',\r\n  },\r\n};\r\n\r\nexport const SELECTOR = {\r\n  ID: {\r\n    PAYMENT_INPUT: 'payment-input',\r\n    PAYMENT_SUBMIT: 'payment-submit',\r\n  },\r\n};\r\n","const getRandomNumber = (min, max) => {\r\n  return Math.round((1 - Math.random()) * (max - min)) + min;\r\n};\r\n\r\nexport const getRandomNumbers = ({ min, max, size }) => {\r\n  const numberSet = new Set();\r\n\r\n  while (numberSet.size < size) {\r\n    numberSet.add(getRandomNumber(min, max));\r\n  }\r\n\r\n  return [...numberSet];\r\n};\r\n\r\nfunction* getId() {\r\n  let id = 0;\r\n\r\n  while (true) {\r\n    yield id++;\r\n  }\r\n}\r\n\r\nexport const idMaker = getId();\r\n\r\nexport const formatMoney = number => {\r\n  return new Intl.NumberFormat('ko-KR').format(number);\r\n};\r\n","import { Lottery } from '../models';\r\nimport { getRandomNumbers, idMaker, LOTTERY } from '../utils';\r\n\r\nexport default class LotteryMachine {\r\n  publishLotteries(money) {\r\n    const lotteryAmount = money / LOTTERY.PRICE;\r\n    const lotteries = Array(lotteryAmount)\r\n      .fill(0)\r\n      .map(() => {\r\n        const id = idMaker.next().value;\r\n        const numbers = getRandomNumbers({\r\n          min: LOTTERY.MIN_NUMBER,\r\n          max: LOTTERY.MAX_NUMBER,\r\n          size: LOTTERY.NUMBER_COUNT,\r\n        });\r\n\r\n        return new Lottery(id, numbers);\r\n      });\r\n\r\n    return lotteries;\r\n  }\r\n}\r\n","import { LOTTERY, PRIZE } from '../utils';\r\n\r\nexport default class ProfitCalculator {\r\n  getWinningResult({ winningNumbers, bonusNumber, lotteries }) {\r\n    const rankCount = this._getRankCount({\r\n      winningNumbers,\r\n      bonusNumber,\r\n      lotteries,\r\n    });\r\n    const earningRate = this._getEarningRate(rankCount, lotteries);\r\n\r\n    return { rankCount, earningRate };\r\n  }\r\n\r\n  _getRankCount({ winningNumbers, bonusNumber, lotteries }) {\r\n    const rankCount = {\r\n      [PRIZE.FIRST.RANK]: 0,\r\n      [PRIZE.SECOND.RANK]: 0,\r\n      [PRIZE.THIRD.RANK]: 0,\r\n      [PRIZE.FOURTH.RANK]: 0,\r\n      [PRIZE.FIFTH.RANK]: 0,\r\n    };\r\n\r\n    lotteries.forEach(lottery => {\r\n      const rank = this._getRank({ winningNumbers, bonusNumber, lottery });\r\n\r\n      if (rank) {\r\n        rankCount[rank]++;\r\n      }\r\n    });\r\n\r\n    return rankCount;\r\n  }\r\n\r\n  _getRank({ winningNumbers, bonusNumber, lottery }) {\r\n    const rank = {\r\n      [PRIZE.FIRST.WINNING_COUNT]: () => PRIZE.FIRST.RANK,\r\n      [PRIZE.SECOND.WINNING_COUNT]: isBonusMatched =>\r\n        isBonusMatched ? PRIZE.SECOND.RANK : PRIZE.THIRD.RANK,\r\n      [PRIZE.FOURTH.WINNING_COUNT]: () => PRIZE.FOURTH.RANK,\r\n      [PRIZE.FIFTH.WINNING_COUNT]: () => PRIZE.FIFTH.RANK,\r\n    };\r\n    const isBonusMatched = lottery.numbers.includes(bonusNumber);\r\n    const matchWinningCount = lottery.numbers.reduce((winningCount, number) => {\r\n      if (!winningNumbers.includes(number)) {\r\n        return winningCount;\r\n      }\r\n\r\n      return ++winningCount;\r\n    }, 0);\r\n\r\n    return rank[matchWinningCount]?.(isBonusMatched);\r\n  }\r\n\r\n  _getEarningRate(rankCount, lotteries) {\r\n    const spentMoney = lotteries.length * LOTTERY.PRICE;\r\n    const earningRate =\r\n      (this._calculateEarning(rankCount, spentMoney) / spentMoney) * 100;\r\n\r\n    return Number.isInteger(earningRate) ? earningRate : earningRate.toFixed(2);\r\n  }\r\n\r\n  _calculateEarning(rankCount, spentMoney) {\r\n    const prizeMoney = {\r\n      [PRIZE.FIRST.RANK]: PRIZE.FIRST.MONEY,\r\n      [PRIZE.SECOND.RANK]: PRIZE.SECOND.MONEY,\r\n      [PRIZE.THIRD.RANK]: PRIZE.THIRD.MONEY,\r\n      [PRIZE.FOURTH.RANK]: PRIZE.FOURTH.MONEY,\r\n      [PRIZE.FIFTH.RANK]: PRIZE.FIFTH.MONEY,\r\n    };\r\n\r\n    return Object.entries(rankCount).reduce((earning, [rank, count]) => {\r\n      return earning + prizeMoney[rank] * count;\r\n    }, -spentMoney);\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass LotteriesDetail extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isNumberVisible: false,\r\n    };\r\n  }\r\n\r\n  handleNumberDisplay = () => {\r\n    this.setState({ isNumberVisible: !this.state.isNumberVisible });\r\n  };\r\n\r\n  render() {\r\n    const { isNumberVisible } = this.state;\r\n    const { lotteries } = this.props;\r\n\r\n    return (\r\n      <section className=\"mt-9\">\r\n        <div className=\"d-flex\">\r\n          <label className=\"flex-auto my-0\">\r\n            총 {lotteries.length}개를 구매하였습니다.\r\n          </label>\r\n          <div className=\"flex-auto d-flex justify-end pr-1\">\r\n            <label className=\"switch\">\r\n              <input type=\"checkbox\" onChange={this.handleNumberDisplay} />\r\n              <span className=\"text-base font-normal\">번호보기</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <ul className={`d-flex pl-0 ${isNumberVisible ? 'flex-col' : ''}`}>\r\n          {lotteries.map(lottery => (\r\n            <li className=\"d-flex items-center\" key={lottery.id}>\r\n              <span className=\"mx-1 text-4xl\">🎟️</span>\r\n              <span className={`ml-3 ${isNumberVisible ? '' : 'd-none'}`}>\r\n                {lottery.numbers.join(', ')}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LotteriesDetail;\r\n","import React, { Component } from 'react';\r\nimport { LOTTERY, MAX_PAYMENT, MESSAGE, SELECTOR } from '../utils';\r\n\r\nclass PaymentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.messageRef = React.createRef();\r\n  }\r\n\r\n  handleInputCheck = ({ target }) => {\r\n    if (target.value === '') {\r\n      this.props.setMoney(null);\r\n      return;\r\n    }\r\n\r\n    const money = Number(target.value);\r\n    const $message = this.messageRef.current;\r\n\r\n    this.props.setMoney(money);\r\n\r\n    if (this.isValidPayment(money)) {\r\n      $message.innerText = '';\r\n\r\n      return;\r\n    }\r\n\r\n    $message.innerText = MESSAGE.PAYMENT_FORM.INVALID_PAYMENT;\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const $input = event.target[SELECTOR.ID.PAYMENT_INPUT];\r\n    const $message = this.messageRef.current;\r\n    const money = Number($input.value);\r\n\r\n    if (!this.isValidPayment(money)) {\r\n      $message.innerText = MESSAGE.PAYMENT_FORM.INVALID_PAYMENT;\r\n\r\n      return;\r\n    }\r\n\r\n    this.props.setLotteries(money);\r\n  };\r\n\r\n  isValidPayment(value) {\r\n    return value > 0 && value % LOTTERY.PRICE === 0;\r\n  }\r\n\r\n  render() {\r\n    const { money } = this.props;\r\n\r\n    return (\r\n      <form className=\"mt-5\" onSubmit={this.handleSubmit}>\r\n        <label\r\n          className=\"mb-2 d-inline-block\"\r\n          htmlFor={SELECTOR.ID.PAYMENT_INPUT}\r\n        >\r\n          구입할 금액을 입력해주세요.\r\n        </label>\r\n        <div className=\"d-flex\">\r\n          <input\r\n            id={SELECTOR.ID.PAYMENT_INPUT}\r\n            className=\"w-100 mr-2 pl-2\"\r\n            type=\"number\"\r\n            placeholder={`구입 금액 (${LOTTERY.PRICE}원 단위)`}\r\n            onChange={this.handleInputCheck}\r\n            max={MAX_PAYMENT}\r\n            value={money ? money : ''}\r\n            disabled={this.props.lotteries.length !== 0}\r\n          />\r\n          <button\r\n            id={SELECTOR.ID.PAYMENT_SUBMIT}\r\n            className=\"btn btn-cyan\"\r\n            type=\"submit\"\r\n            disabled={this.props.lotteries.length !== 0}\r\n          >\r\n            확인\r\n          </button>\r\n        </div>\r\n        <p ref={this.messageRef}></p>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaymentForm;\r\n","import React, { Component } from 'react';\r\nimport { hasDuplicatedNumber, LOTTERY, MESSAGE } from '../utils';\r\n\r\nclass WinningNumbersForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.messageRef = React.createRef();\r\n    this.state = {\r\n      isSubmit: false,\r\n      winningNumbers: Array(LOTTERY.NUMBER_COUNT).fill(null),\r\n      bonusNumber: null,\r\n    };\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const inputNumbers = [...this.state.winningNumbers, this.state.bonusNumber];\r\n    const $input = this.messageRef.current;\r\n\r\n    if (hasDuplicatedNumber(inputNumbers)) {\r\n      $input.innerText = MESSAGE.WINNING_NUMBERS_FORM.HAS_DUPLICATED_NUMBER;\r\n\r\n      return;\r\n    }\r\n\r\n    $input.innerText = '';\r\n    this.setState({ isSubmit: true });\r\n    this.props.setWinningResult(\r\n      this.state.winningNumbers,\r\n      this.state.bonusNumber\r\n    );\r\n  };\r\n\r\n  handleWinningNumberChange = ({ target }) => {\r\n    const targetIndex = Number(target.dataset.index);\r\n    const winningNumbers = this.state.winningNumbers.map((number, index) => {\r\n      if (index !== targetIndex) {\r\n        return number;\r\n      }\r\n\r\n      return Number(target.value);\r\n    });\r\n\r\n    this.setState({ winningNumbers });\r\n  };\r\n\r\n  handleBonusNumberChange = ({ target }) => {\r\n    const bonusNumber = target.value;\r\n\r\n    this.setState({ bonusNumber });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"mt-9\">\r\n        <label className=\"flex-auto d-inline-block mb-3\">\r\n          지난 주 당첨번호 6개와 보너스 넘버 1개를 입력해주세요.\r\n        </label>\r\n        <div className=\"d-flex\">\r\n          <div>\r\n            <h4 className=\"mt-0 mb-3 text-center\">당첨 번호</h4>\r\n            <div>\r\n              {this.state.winningNumbers.map((_, index) => (\r\n                <input\r\n                  key={index}\r\n                  onChange={this.handleWinningNumberChange}\r\n                  data-index={index}\r\n                  className=\"winning-number mx-1 text-center\"\r\n                  type=\"number\"\r\n                  min={LOTTERY.MIN_NUMBER}\r\n                  max={LOTTERY.MAX_NUMBER}\r\n                  required\r\n                  disabled={this.state.isSubmit}\r\n                ></input>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"bonus-number-container flex-grow\">\r\n            <h4 className=\"mt-0 mb-3 text-center\">보너스 번호</h4>\r\n            <div className=\"d-flex justify-center\">\r\n              <input\r\n                className=\"bonus-number text-center\"\r\n                onChange={this.handleBonusNumberChange}\r\n                type=\"number\"\r\n                min={LOTTERY.MIN_NUMBER}\r\n                max={LOTTERY.MAX_NUMBER}\r\n                disabled={this.state.isSubmit}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p ref={this.messageRef}></p>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"open-result-modal-button mt-5 btn btn-cyan w-100\"\r\n        >\r\n          결과 확인하기\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WinningNumbersForm;\r\n","export const hasDuplicatedNumber = numbers => {\r\n  const set = new Set(numbers);\r\n\r\n  return set.size !== numbers.length;\r\n};\r\n","import React, { Component } from 'react';\r\nimport { formatMoney } from '../utils';\r\n\r\nclass PrizeTableInfo extends Component {\r\n  render() {\r\n    const { winningCount, money, count } = this.props;\r\n\r\n    return (\r\n      <tr className=\"text-center\">\r\n        <td className=\"p-3\">{`${winningCount}`}</td>\r\n        <td className=\"p-3\">{formatMoney(money)}</td>\r\n        <td className=\"modal__winning-count p-3\">{count}</td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrizeTableInfo;\r\n","import React, { Component } from 'react';\r\nimport { PRIZE } from '../utils';\r\nimport PrizeTableInfo from './PrizeTableInfo';\r\n\r\nclass WinningResultModal extends Component {\r\n  render() {\r\n    const { rankCount, earningRate } = this.props.winningResult;\r\n\r\n    return (\r\n      <div className={`modal ${this.props.isModalOpen ? 'open' : ''}`}>\r\n        <div className=\"modal-inner p-10\">\r\n          <div className=\"modal-close\" onClick={this.props.closeModal}>\r\n            <svg viewBox=\"0 0 40 40\">\r\n              <path className=\"close-x\" d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\r\n            </svg>\r\n          </div>\r\n\r\n          <h2 className=\"text-center\">🏆 당첨 통계 🏆</h2>\r\n          <div className=\"d-flex justify-center\">\r\n            <table className=\"result-table border-collapse border border-black\">\r\n              <thead>\r\n                <tr className=\"text-center\">\r\n                  <th className=\"p-3\">일치 갯수</th>\r\n                  <th className=\"p-3\">당첨금</th>\r\n                  <th className=\"p-3\">당첨 갯수</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <PrizeTableInfo\r\n                  winningCount={`${PRIZE.FIFTH.WINNING_COUNT}개`}\r\n                  money={PRIZE.FIFTH.MONEY}\r\n                  count={`${rankCount[PRIZE.FIFTH.RANK]}개`}\r\n                />\r\n                <PrizeTableInfo\r\n                  winningCount={`${PRIZE.FOURTH.WINNING_COUNT}개`}\r\n                  money={PRIZE.FOURTH.MONEY}\r\n                  count={`${rankCount[PRIZE.FOURTH.RANK]}개`}\r\n                />\r\n                <PrizeTableInfo\r\n                  winningCount={`${PRIZE.THIRD.WINNING_COUNT}개`}\r\n                  money={PRIZE.THIRD.MONEY}\r\n                  count={`${rankCount[PRIZE.THIRD.RANK]}개`}\r\n                />\r\n                <PrizeTableInfo\r\n                  winningCount={`${PRIZE.SECOND.WINNING_COUNT}개 + 보너스 볼`}\r\n                  money={PRIZE.SECOND.MONEY}\r\n                  count={`${rankCount[PRIZE.SECOND.RANK]}개`}\r\n                />\r\n                <PrizeTableInfo\r\n                  winningCount={`${PRIZE.FIRST.WINNING_COUNT}개`}\r\n                  money={PRIZE.FIRST.MONEY}\r\n                  count={`${rankCount[PRIZE.FIRST.RANK]}개`}\r\n                />\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <p className=\"modal__earning-rate text-center font-bold\">\r\n            당신의 총 수익률은 {earningRate}%입니다.\r\n          </p>\r\n          <div className=\"d-flex justify-center mt-5\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"modal__restart-button btn btn-cyan\"\r\n              onClick={this.props.resetApp}\r\n            >\r\n              다시 시작하기\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WinningResultModal;\r\n","import React, { Component } from 'react';\r\nimport { LotteryMachine, ProfitCalculator } from '../services';\r\nimport LotteriesDetail from './LotteriesDetail';\r\nimport PaymentForm from './PaymentForm';\r\nimport WinningNumbersForm from './WinningNumbersForm';\r\nimport WinningResultModal from './WinningResultModal';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.lotteryMachine = new LotteryMachine();\r\n    this.profitCalculator = new ProfitCalculator();\r\n    this.state = {\r\n      money: null,\r\n      lotteries: [],\r\n      winningResult: null,\r\n      isResultModalOpen: false,\r\n    };\r\n  }\r\n\r\n  setLotteries = () => {\r\n    const lotteries = this.lotteryMachine.publishLotteries(this.state.money);\r\n\r\n    this.setState({ lotteries });\r\n  };\r\n\r\n  setMoney = money => {\r\n    this.setState({ money });\r\n  };\r\n\r\n  setWinningResult = (winningNumbers, bonusNumber) => {\r\n    const winningResult = this.profitCalculator.getWinningResult({\r\n      winningNumbers,\r\n      bonusNumber,\r\n      lotteries: this.state.lotteries,\r\n    });\r\n\r\n    this.setState({\r\n      winningResult,\r\n      isResultModalOpen: true,\r\n    });\r\n  };\r\n\r\n  closeResultModal = () => {\r\n    this.setState({ isResultModalOpen: false });\r\n  };\r\n\r\n  resetApp = () => {\r\n    this.setState({\r\n      money: null,\r\n      lotteries: [],\r\n      winningResult: null,\r\n      isResultModalOpen: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { money, lotteries, winningResult } = this.state;\r\n\r\n    return (\r\n      <div id=\"app\" className=\"d-flex justify-center mt-5\">\r\n        <div className=\"w-100\">\r\n          <h1 className=\"text-center\">🎱 행운의 로또</h1>\r\n          <PaymentForm\r\n            money={money}\r\n            lotteries={lotteries}\r\n            setMoney={this.setMoney}\r\n            setLotteries={this.setLotteries}\r\n          />\r\n          {lotteries.length > 0 && (\r\n            <>\r\n              <LotteriesDetail lotteries={lotteries} />\r\n              <WinningNumbersForm setWinningResult={this.setWinningResult} />\r\n            </>\r\n          )}\r\n          {winningResult && (\r\n            <WinningResultModal\r\n              winningResult={winningResult}\r\n              isModalOpen={this.state.isResultModalOpen}\r\n              closeModal={this.closeResultModal}\r\n              resetApp={this.resetApp}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './css/index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}